// WORKAROUND: There seems to be a bug where Gradle is too eager to perform dependency substitution.
// It replace the binary dependency for the project within the current multi-project.
// The result is a dependency cycle with an error message wrongly pointing to miss built plugin project.
buildscript {
    repositories {
        gradlePluginPortal()
        maven { url = 'https://dl.bintray.com/gradle-plugins/distributions' }
    }
    dependencies {
        classpath 'dev.gradleplugins:gradle-plugin-development:1.1.2'
    }
}
apply plugin: 'dev.gradleplugins.gradle-plugin-development'

import groovy.json.JsonSlurper
import groovy.transform.TupleConstructor
import org.gradle.util.VersionNumber

rootProject.name = 'toolbox'

// Gradle APIs
@TupleConstructor
class VersionDownloadInfo {
    def json

    String getVersion() {
        return json.version
    }

    boolean isNotSnapshot() {
        return !json.snapshot
    }

    boolean isNotReleaseCandidate() {
        return !json.version.contains("-rc-")
    }

    boolean isNotMilestone() {
        return !json.version.contains("-milestone-")
    }

    boolean greaterOrEqualTo(String versionString) {
        return VersionNumber.parse(versionString).compareTo(VersionNumber.parse(json.version)) <= 0
    }
}
private Set<String> allGeneralAvailableVersion() {
    def versionInfo = new JsonSlurper().parseText('https://services.gradle.org/versions/all'.toURL().text).collect { new VersionDownloadInfo(it) }
    def result = versionInfo.findAll { it.notSnapshot && it.notReleaseCandidate && it.notMilestone && it.greaterOrEqualTo("2.14") }.collect { it.version }
    return result
}
include('gradle-api')
project(':gradle-api').projectDir = file('subprojects/gradle-api')
allGeneralAvailableVersion().each { version ->
    include("gradle-api:${version}")
    project(":gradle-api:${version}").projectDir = file("subprojects/gradle-api/${version}")
}

// Gradle Fixtures
include('gradle-fixtures')
project(':gradle-fixtures').projectDir = file('subprojects/gradle-fixtures')

// Plugin developement
include('gradle-plugin-development')
project(':gradle-plugin-development').projectDir = file('subprojects/gradle-plugin-development')

plugins.withId('com.gradle.enterprise') {
    gradleEnterprise {
        buildScan {
            termsOfServiceUrl = "https://gradle.com/terms-of-service"
            termsOfServiceAgree = "yes"

            if (System.getenv('CI')) {
                tag 'CI'
                value('Git Commit SHA', System.getenv('CI_COMMIT_SHA'))
                value('GitLab Runner', System.getenv('CI_RUNNER_DESCRIPTION'))
            } else {
                tag 'LOCAL'
            }

            obfuscation {
                username { name -> 'super-human' }
                hostname { host -> 'somewhere' }
                ipAddresses { addresses -> addresses.collect { '1.2.3.4' } }
            }
        }
    }
}